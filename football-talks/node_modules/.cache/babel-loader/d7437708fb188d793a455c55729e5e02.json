{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\MyRepo\\\\src\\\\components\\\\content\\\\dialogs\\\\DialogsContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeNewMessageActionCreator, sendMessageActionCreator } from '../../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogsPage;\n\n  let sendNewMessage = () => {\n    let action = sendMessageActionCreator();\n    props.store.dispatch(action);\n  };\n\n  let newMessageChange = message => {\n    let action = changeNewMessageActionCreator(message);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    sendNewMessage: sendNewMessage,\n    newMessageChange: newMessageChange,\n    state: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogsContainer;\n\nconst mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendNewMessage: () => {\n      let action = sendMessageActionCreator();\n      dispatch(action);\n    },\n    newMessageChange: message => {\n      let action = changeNewMessageActionCreator(message);\n      dispatch(action);\n    }\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["C:/Programming/MyRepo/src/components/content/dialogs/DialogsContainer.jsx"],"names":["React","connect","changeNewMessageActionCreator","sendMessageActionCreator","Dialogs","DialogsContainer","props","state","store","getState","dialogsPage","sendNewMessage","action","dispatch","newMessageChange","message","mapStateToProps","mapDispatchToProps","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,6BAAT,EAAwCC,wBAAxC,QAAwE,+BAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAEhC,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;;AAEA,MAAIC,cAAc,GAAG,MAAM;AACvB,QAAIC,MAAM,GAAGT,wBAAwB,EAArC;AACAG,IAAAA,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBD,MAArB;AACH,GAHD;;AAKA,MAAIE,gBAAgB,GAAIC,OAAD,IAAa;AAChC,QAAIH,MAAM,GAAGV,6BAA6B,CAACa,OAAD,CAA1C;AACAT,IAAAA,KAAK,CAACE,KAAN,CAAYK,QAAZ,CAAqBD,MAArB;AACH,GAHD;;AAKA,sBACI,QAAC,OAAD;AAAS,IAAA,cAAc,EAAED,cAAzB;AAAyC,IAAA,gBAAgB,EAAEG,gBAA3D;AAA6E,IAAA,KAAK,EAAEP;AAApF;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjBD;;KAAMF,gB;;AAmBN,MAAMW,eAAe,GAAIT,KAAD,IAAW;AAC/B,SAAO;AACHG,IAAAA,WAAW,EAAEH,KAAK,CAACG;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMO,kBAAkB,GAAIJ,QAAD,IAAc;AACrC,SAAO;AACHF,IAAAA,cAAc,EAAE,MAAM;AAClB,UAAIC,MAAM,GAAGT,wBAAwB,EAArC;AACAU,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH,KAJE;AAKHE,IAAAA,gBAAgB,EAAGC,OAAD,IAAa;AAC3B,UAAIH,MAAM,GAAGV,6BAA6B,CAACa,OAAD,CAA1C;AACAF,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACH;AARE,GAAP;AAUH,CAXD;;AAaA,MAAMM,qBAAqB,GAAGjB,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA8Cb,OAA9C,CAA9B;AAEA,eAAeC,gBAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeNewMessageActionCreator, sendMessageActionCreator } from '../../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let sendNewMessage = () => {\r\n        let action = sendMessageActionCreator();\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n    let newMessageChange = (message) => {\r\n        let action = changeNewMessageActionCreator(message);\r\n        props.store.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <Dialogs sendNewMessage={sendNewMessage} newMessageChange={newMessageChange} state={state}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendNewMessage: () => {\r\n            let action = sendMessageActionCreator();\r\n            dispatch(action);\r\n        },\r\n        newMessageChange: (message) => {\r\n            let action = changeNewMessageActionCreator(message);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}