{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\MyRepo\\\\src\\\\components\\\\content\\\\dialogs\\\\Dialogs.jsx\";\nimport c from './Dialogs.module.css';\nimport React from 'react';\nimport DialogItems from './dialogItems/DialogItems';\nimport Message from './message/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let dialogsElements = props.dialogsPage.dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItems, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 66\n  }, this));\n  let messagesElements = props.dialogsPage.messagesData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 68\n  }, this));\n  let newMessageText = /*#__PURE__*/React.createRef();\n\n  let sendNewMessage = () => {\n    let action = {\n      type: 'SEND-MESSAGE'\n    };\n    props.dispatch(action); // props.sendMessage();\n  };\n\n  let onNewMessageChange = () => {\n    let message = newMessageText.current.value;\n    let action = {\n      type: 'CHANGE-NEW-MESSAGE',\n      newMessage: message\n    };\n    props.dispatch(action); // props.changeNewMessage(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.Dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.Users,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.Line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.Messages,\n      children: messagesElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.Send,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onNewMessageChange,\n        ref: newMessageText,\n        value: props.dialogsPage.newMessageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendNewMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["C:/Programming/MyRepo/src/components/content/dialogs/Dialogs.jsx"],"names":["c","React","DialogItems","Message","Dialogs","props","dialogsElements","dialogsPage","dialogsData","map","d","name","id","messagesElements","messagesData","m","message","newMessageText","createRef","sendNewMessage","action","type","dispatch","onNewMessageChange","current","value","newMessage","Users","Line","Messages","Send"],"mappings":";AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,eAAe,GAAGD,KAAK,CAACE,WAAN,CAAkBC,WAAlB,CAA8BC,GAA9B,CAAkCC,CAAC,iBAAI,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,CAAC,CAACC,IAArB;AAA2B,IAAA,EAAE,EAAED,CAAC,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAvC,CAAtB;AAEA,MAAIC,gBAAgB,GAAGR,KAAK,CAACE,WAAN,CAAkBO,YAAlB,CAA+BL,GAA/B,CAAmCM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,UAAxC,CAAvB;AAEA,MAAIC,cAAc,gBAAGhB,KAAK,CAACiB,SAAN,EAArB;;AAEA,MAAIC,cAAc,GAAG,MAAM;AACvB,QAAIC,MAAM,GAAG;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACAhB,IAAAA,KAAK,CAACiB,QAAN,CAAeF,MAAf,EAFuB,CAGvB;AACH,GAJD;;AAMA,MAAIG,kBAAkB,GAAG,MAAM;AAC3B,QAAIP,OAAO,GAAGC,cAAc,CAACO,OAAf,CAAuBC,KAArC;AACA,QAAIL,MAAM,GAAG;AAACC,MAAAA,IAAI,EAAE,oBAAP;AAA6BK,MAAAA,UAAU,EAAEV;AAAzC,KAAb;AACAX,IAAAA,KAAK,CAACiB,QAAN,CAAeF,MAAf,EAH2B,CAI3B;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAEpB,CAAC,CAACI,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEJ,CAAC,CAAC2B,KAAlB;AAAA,gBACKrB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEN,CAAC,CAAC4B;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAE5B,CAAC,CAAC6B,QAAlB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,SAAS,EAAEb,CAAC,CAAC8B,IAAlB;AAAA,8BACI;AAAU,QAAA,QAAQ,EAAEP,kBAApB;AAAwC,QAAA,GAAG,EAAEN,cAA7C;AAA6D,QAAA,KAAK,EAAEZ,KAAK,CAACE,WAAN,CAAkBU;AAAtF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAQ,UAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAtCD;;KAAMf,O;AAwCN,eAAeA,OAAf","sourcesContent":["import c from './Dialogs.module.css';\r\nimport React from 'react';\r\nimport DialogItems from './dialogItems/DialogItems';\r\nimport Message from './message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogsData.map(d => <DialogItems name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements = props.dialogsPage.messagesData.map(m => <Message message={m.message}/>)\r\n\r\n    let newMessageText = React.createRef();\r\n\r\n    let sendNewMessage = () => {\r\n        let action = {type: 'SEND-MESSAGE'};\r\n        props.dispatch(action);\r\n        // props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = () => {\r\n        let message = newMessageText.current.value;\r\n        let action = {type: 'CHANGE-NEW-MESSAGE', newMessage: message};\r\n        props.dispatch(action);\r\n        // props.changeNewMessage(message);\r\n    }\r\n\r\n    return (\r\n        <div className={c.Dialogs}>\r\n            <div className={c.Users}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={c.Line}></div>\r\n            <div className={c.Messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div className={c.Send}>\r\n                <textarea onChange={onNewMessageChange} ref={newMessageText} value={props.dialogsPage.newMessageText}></textarea>\r\n                <div>\r\n                    <button onClick={sendNewMessage}>Отправить сообщение</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}