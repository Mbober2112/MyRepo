{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\MyRepo\\\\src\\\\components\\\\content\\\\users\\\\UsersContainer.jsx\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from \"../../../redux/usersReducer\";\nimport Users from \"./Users\";\nimport * as axios from 'axios';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`http://localhost:8080/user?id=1&count=${this.props.pageSize}&page=${pageNumber}`).then(response => {\n        this.props.setUsers(response.data.usersSend);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8080/user?id=1&count=${this.props.pageSize}&page=${this.props.currentPage}`).then(response => {\n      this.props.setUsers(response.data.usersSend);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      allUsers: this.props.allUsers,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allUsers: state.allUsersPage.allUsers,\n    pageSize: state.allUsersPage.pageSize,\n    totalUsersCount: state.allUsersPage.totalUsersCount,\n    currentPage: state.allUsersPage.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: id => {\n      let action = followAC(id);\n      dispatch(action);\n    },\n    unfollow: id => {\n      let action = unfollowAC(id);\n      dispatch(action);\n    },\n    setUsers: users => {\n      let action = setUsersAC(users);\n      dispatch(action);\n    },\n    setCurrentPage: pageNumber => {\n      let action = setCurrentPageAC(pageNumber);\n      dispatch(action);\n    },\n    setTotalUsersCount: totalCount => {\n      let action = setTotalUsersCountAC(totalCount);\n      dispatch(action);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/Programming/MyRepo/src/components/content/users/UsersContainer.jsx"],"names":["connect","followAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","unfollowAC","Users","axios","React","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","usersSend","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","totalUsersCount","allUsers","unfollow","follow","mapStateToProps","state","allUsersPage","mapDispatchToProps","dispatch","id","action","users"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from \"../../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport * as axios from 'axios';\r\nimport React from \"react\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n    componentDidMount () {    \r\n        axios.get(`http://localhost:8080/user?id=1&count=${this.props.pageSize}&page=${this.props.currentPage}`).then(response => {\r\n            \r\n            this.props.setUsers(response.data.usersSend);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`http://localhost:8080/user?id=1&count=${this.props.pageSize}&page=${pageNumber}`).then(response => {\r\n            this.props.setUsers(response.data.usersSend);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        debugger;\r\n        return <Users \r\n            totalUsersCount = {this.props.totalUsersCount}\r\n            pageSize = {this.props.pageSize}\r\n            allUsers = {this.props.allUsers}\r\n            unfollow = {this.props.unfollow}\r\n            follow = {this.props.follow}\r\n            currentPage = {this.props.currentPage}\r\n            onPageChanged = {this.onPageChanged}/>\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allUsers: state.allUsersPage.allUsers,\r\n        pageSize: state.allUsersPage.pageSize,\r\n        totalUsersCount: state.allUsersPage.totalUsersCount,\r\n        currentPage: state.allUsersPage.currentPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (id) => {\r\n            let action = followAC(id);\r\n            dispatch(action);\r\n        },\r\n\r\n        unfollow: (id) => {\r\n            let action = unfollowAC(id);\r\n            dispatch(action); \r\n        },\r\n\r\n        setUsers: (users) => {\r\n            let action = setUsersAC(users);\r\n            dispatch(action);\r\n        },\r\n\r\n        setCurrentPage: (pageNumber) => {\r\n            let action = setCurrentPageAC(pageNumber);\r\n            dispatch(action);\r\n        },\r\n\r\n        setTotalUsersCount: (totalCount) => {\r\n            let action = setTotalUsersCountAC(totalCount);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}