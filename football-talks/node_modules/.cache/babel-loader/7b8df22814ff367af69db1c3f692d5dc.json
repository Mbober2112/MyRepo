{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      myPostsData: [{\n        id: 1,\n        title: \"Пост 1\",\n        text: \"Текст\",\n        likes: 12,\n        dislikes: 3\n      }, {\n        id: 2,\n        title: \"Пост 2\",\n        text: \"Текст\",\n        likes: 16,\n        dislikes: 5\n      }, {\n        id: 3,\n        title: \"Пост 3\",\n        text: \"Текст\",\n        likes: 21,\n        dislikes: 8\n      }, {\n        id: 4,\n        title: \"Пост 4\",\n        text: \"Текст\",\n        likes: 16,\n        dislikes: 2\n      }],\n      newPostTitle: \"\",\n      newPostText: \"\"\n    },\n    dialogsPage: {\n      dialogsData: [{\n        id: 1,\n        name: \"Pavel\"\n      }, {\n        id: 2,\n        name: \"Petr\"\n      }, {\n        id: 3,\n        name: \"Dima\"\n      }, {\n        id: 4,\n        name: \"Anton\"\n      }],\n      messagesData: [{\n        id: 1,\n        message: \"Hello\"\n      }, {\n        id: 2,\n        message: \"Hi\"\n      }, {\n        id: 3,\n        message: \"How are you?\"\n      }, {\n        id: 4,\n        message: \"Bye\"\n      }],\n      newMessageText: \"\"\n    },\n    allPostsPage: {\n      allPostsData: [{\n        id: 1,\n        username: \"Pavel\",\n        title: \"Заголовок 1\",\n        text: \"Текст\",\n        likes: 12,\n        dislikes: 3,\n        saved: true\n      }, {\n        id: 2,\n        username: \"Petr\",\n        title: \"Заголовок 2\",\n        text: \"Текст\",\n        likes: 16,\n        dislikes: 5,\n        saved: false\n      }, {\n        id: 3,\n        username: \"Dima\",\n        title: \"Заголовок 3\",\n        text: \"Текст\",\n        likes: 21,\n        dislikes: 8,\n        saved: false\n      }, {\n        id: 4,\n        username: \"Anton\",\n        title: \"Заголовок 4\",\n        text: \"Текст\",\n        likes: 16,\n        dislikes: 2,\n        saved: true\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {},\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type == 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        title: this._state.profilePage.newPostTitle,\n        text: this._state.profilePage.newPostText,\n        likes: 0,\n        dislikes: 0\n      };\n      let newAllPost = {\n        id: 5,\n        username: \"Username\",\n        title: this._state.profilePage.newPostTitle,\n        text: this._state.profilePage.newPostText,\n        likes: 0,\n        dislikes: 0,\n        saved: false\n      };\n\n      this._state.profilePage.myPostsData.push(newPost);\n\n      this._state.allPostsPage.allPostsData.push(newAllPost);\n\n      this._state.profilePage.newPostTitle = \"\";\n      this._state.profilePage.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type == 'CHANGE-NEW-POST') {\n      this._state.profilePage.newPostTitle = action.newTitle;\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type == 'SEND-MESSAGE') {\n      let newMessage = {\n        id: 5,\n        message: this._state.dialogsPage.newMessageText\n      };\n\n      this._state.dialogsPage.messagesData.push(newMessage);\n\n      this._state.dialogsPage.newMessageText = \"\";\n\n      this._callSubscriber(this._state);\n    } else if (action.type == 'CHANGE-NEW-MESSAGE') {\n      this._state.dialogsPage.newMessageText = action.newMessage;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport default store;","map":{"version":3,"sources":["C:/Programming/MyRepo/src/redux/State.js"],"names":["store","_state","profilePage","myPostsData","id","title","text","likes","dislikes","newPostTitle","newPostText","dialogsPage","dialogsData","name","messagesData","message","newMessageText","allPostsPage","allPostsData","username","saved","getState","_callSubscriber","subscribe","observer","dispatch","action","type","newPost","newAllPost","push","newTitle","newText","newMessage"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,WAAW,EAAE,CACT;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,EAAhD;AAAoDC,QAAAA,QAAQ,EAAE;AAA9D,OADS,EAET;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,EAAhD;AAAoDC,QAAAA,QAAQ,EAAE;AAA9D,OAFS,EAGT;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,EAAhD;AAAoDC,QAAAA,QAAQ,EAAE;AAA9D,OAHS,EAIT;AAAEJ,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,OAAhC;AAAyCC,QAAAA,KAAK,EAAE,EAAhD;AAAoDC,QAAAA,QAAQ,EAAE;AAA9D,OAJS,CADJ;AAOTC,MAAAA,YAAY,EAAE,EAPL;AAQTC,MAAAA,WAAW,EAAE;AARJ,KADT;AAWJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,WAAW,EAAE,CACT;AAAER,QAAAA,EAAE,EAAE,CAAN;AAASS,QAAAA,IAAI,EAAE;AAAf,OADS,EAET;AAAET,QAAAA,EAAE,EAAE,CAAN;AAASS,QAAAA,IAAI,EAAE;AAAf,OAFS,EAGT;AAAET,QAAAA,EAAE,EAAE,CAAN;AAASS,QAAAA,IAAI,EAAE;AAAf,OAHS,EAIT;AAAET,QAAAA,EAAE,EAAE,CAAN;AAASS,QAAAA,IAAI,EAAE;AAAf,OAJS,CADJ;AAOTC,MAAAA,YAAY,EAAE,CACV;AAAEV,QAAAA,EAAE,EAAE,CAAN;AAASW,QAAAA,OAAO,EAAE;AAAlB,OADU,EAEV;AAAEX,QAAAA,EAAE,EAAE,CAAN;AAASW,QAAAA,OAAO,EAAE;AAAlB,OAFU,EAGV;AAAEX,QAAAA,EAAE,EAAE,CAAN;AAASW,QAAAA,OAAO,EAAE;AAAlB,OAHU,EAIV;AAAEX,QAAAA,EAAE,EAAE,CAAN;AAASW,QAAAA,OAAO,EAAE;AAAlB,OAJU,CAPL;AAaTC,MAAAA,cAAc,EAAE;AAbP,KAXT;AA0BJC,IAAAA,YAAY,EAAE;AACVC,MAAAA,YAAY,EAAE,CACV;AAAEd,QAAAA,EAAE,EAAE,CAAN;AAASe,QAAAA,QAAQ,EAAE,OAAnB;AAA4Bd,QAAAA,KAAK,EAAE,aAAnC;AAAkDC,QAAAA,IAAI,EAAE,OAAxD;AAAiEC,QAAAA,KAAK,EAAE,EAAxE;AAA4EC,QAAAA,QAAQ,EAAE,CAAtF;AAAyFY,QAAAA,KAAK,EAAE;AAAhG,OADU,EAEV;AAAEhB,QAAAA,EAAE,EAAE,CAAN;AAASe,QAAAA,QAAQ,EAAE,MAAnB;AAA2Bd,QAAAA,KAAK,EAAE,aAAlC;AAAiDC,QAAAA,IAAI,EAAE,OAAvD;AAAgEC,QAAAA,KAAK,EAAE,EAAvE;AAA2EC,QAAAA,QAAQ,EAAE,CAArF;AAAwFY,QAAAA,KAAK,EAAE;AAA/F,OAFU,EAGV;AAAEhB,QAAAA,EAAE,EAAE,CAAN;AAASe,QAAAA,QAAQ,EAAE,MAAnB;AAA2Bd,QAAAA,KAAK,EAAE,aAAlC;AAAiDC,QAAAA,IAAI,EAAE,OAAvD;AAAgEC,QAAAA,KAAK,EAAE,EAAvE;AAA2EC,QAAAA,QAAQ,EAAE,CAArF;AAAwFY,QAAAA,KAAK,EAAE;AAA/F,OAHU,EAIV;AAAEhB,QAAAA,EAAE,EAAE,CAAN;AAASe,QAAAA,QAAQ,EAAE,OAAnB;AAA4Bd,QAAAA,KAAK,EAAE,aAAnC;AAAkDC,QAAAA,IAAI,EAAE,OAAxD;AAAiEC,QAAAA,KAAK,EAAE,EAAxE;AAA4EC,QAAAA,QAAQ,EAAE,CAAtF;AAAyFY,QAAAA,KAAK,EAAE;AAAhG,OAJU;AADJ;AA1BV,GADA;;AAqCRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKpB,MAAZ;AACH,GAvCO;;AAyCRqB,EAAAA,eAAe,GAAG,CACjB,CA1CO;;AA4CRC,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKF,eAAL,GAAuBE,QAAvB;AACH,GA9CO;;AAgDRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,IAAe,UAAnB,EAA8B;AAC1B,UAAIC,OAAO,GAAG;AACVxB,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,KAAK,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBO,YAFrB;AAGVH,QAAAA,IAAI,EAAE,KAAKL,MAAL,CAAYC,WAAZ,CAAwBQ,WAHpB;AAIVH,QAAAA,KAAK,EAAE,CAJG;AAKVC,QAAAA,QAAQ,EAAE;AALA,OAAd;AAQA,UAAIqB,UAAU,GAAE;AACZzB,QAAAA,EAAE,EAAE,CADQ;AAEZe,QAAAA,QAAQ,EAAE,UAFE;AAGZd,QAAAA,KAAK,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBO,YAHnB;AAIZH,QAAAA,IAAI,EAAE,KAAKL,MAAL,CAAYC,WAAZ,CAAwBQ,WAJlB;AAKZH,QAAAA,KAAK,EAAE,CALK;AAMZC,QAAAA,QAAQ,EAAE,CANE;AAOZY,QAAAA,KAAK,EAAE;AAPK,OAAhB;;AAUA,WAAKnB,MAAL,CAAYC,WAAZ,CAAwBC,WAAxB,CAAoC2B,IAApC,CAAyCF,OAAzC;;AACA,WAAK3B,MAAL,CAAYgB,YAAZ,CAAyBC,YAAzB,CAAsCY,IAAtC,CAA2CD,UAA3C;;AAEA,WAAK5B,MAAL,CAAYC,WAAZ,CAAwBO,YAAxB,GAAuC,EAAvC;AACA,WAAKR,MAAL,CAAYC,WAAZ,CAAwBQ,WAAxB,GAAsC,EAAtC;;AAEA,WAAKY,eAAL,CAAqB,KAAKrB,MAA1B;AACH,KA1BD,MA0BO,IAAGyB,MAAM,CAACC,IAAP,IAAe,iBAAlB,EAAoC;AACvC,WAAK1B,MAAL,CAAYC,WAAZ,CAAwBO,YAAxB,GAAuCiB,MAAM,CAACK,QAA9C;AACA,WAAK9B,MAAL,CAAYC,WAAZ,CAAwBQ,WAAxB,GAAsCgB,MAAM,CAACM,OAA7C;;AACA,WAAKV,eAAL,CAAqB,KAAKrB,MAA1B;AACH,KAJM,MAID,IAAGyB,MAAM,CAACC,IAAP,IAAe,cAAlB,EAAiC;AACnC,UAAIM,UAAU,GAAG;AACb7B,QAAAA,EAAE,EAAE,CADS;AAEbW,QAAAA,OAAO,EAAE,KAAKd,MAAL,CAAYU,WAAZ,CAAwBK;AAFpB,OAAjB;;AAKA,WAAKf,MAAL,CAAYU,WAAZ,CAAwBG,YAAxB,CAAqCgB,IAArC,CAA0CG,UAA1C;;AACA,WAAKhC,MAAL,CAAYU,WAAZ,CAAwBK,cAAxB,GAAyC,EAAzC;;AAEA,WAAKM,eAAL,CAAqB,KAAKrB,MAA1B;AACH,KAVK,MAUA,IAAGyB,MAAM,CAACC,IAAP,IAAe,oBAAlB,EAAwC;AAC1C,WAAK1B,MAAL,CAAYU,WAAZ,CAAwBK,cAAxB,GAAyCU,MAAM,CAACO,UAAhD;;AACA,WAAKX,eAAL,CAAqB,KAAKrB,MAA1B;AACH;AACJ;;AA7FO,CAAZ;AAgGA,eAAeD,KAAf","sourcesContent":["let store = {\r\n    _state: {\r\n        profilePage: {\r\n            myPostsData: [\r\n                { id: 1, title: \"Пост 1\", text: \"Текст\", likes: 12, dislikes: 3 },\r\n                { id: 2, title: \"Пост 2\", text: \"Текст\", likes: 16, dislikes: 5 },\r\n                { id: 3, title: \"Пост 3\", text: \"Текст\", likes: 21, dislikes: 8 },\r\n                { id: 4, title: \"Пост 4\", text: \"Текст\", likes: 16, dislikes: 2 },\r\n            ],\r\n            newPostTitle: \"\",\r\n            newPostText: \"\",\r\n        },\r\n        dialogsPage: {\r\n            dialogsData: [\r\n                { id: 1, name: \"Pavel\" },\r\n                { id: 2, name: \"Petr\" },\r\n                { id: 3, name: \"Dima\" },\r\n                { id: 4, name: \"Anton\" },\r\n            ],\r\n            messagesData: [\r\n                { id: 1, message: \"Hello\" },\r\n                { id: 2, message: \"Hi\" },\r\n                { id: 3, message: \"How are you?\" },\r\n                { id: 4, message: \"Bye\" },\r\n            ],\r\n            newMessageText: \"\",\r\n        },\r\n        allPostsPage: {\r\n            allPostsData: [\r\n                { id: 1, username: \"Pavel\", title: \"Заголовок 1\", text: \"Текст\", likes: 12, dislikes: 3, saved: true },\r\n                { id: 2, username: \"Petr\", title: \"Заголовок 2\", text: \"Текст\", likes: 16, dislikes: 5, saved: false },\r\n                { id: 3, username: \"Dima\", title: \"Заголовок 3\", text: \"Текст\", likes: 21, dislikes: 8, saved: false },\r\n                { id: 4, username: \"Anton\", title: \"Заголовок 4\", text: \"Текст\", likes: 16, dislikes: 2, saved: true },\r\n            ],\r\n        }, \r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    _callSubscriber() {\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type == 'ADD-POST'){\r\n            let newPost = {\r\n                id: 5,\r\n                title: this._state.profilePage.newPostTitle,\r\n                text: this._state.profilePage.newPostText,\r\n                likes: 0,\r\n                dislikes: 0\r\n            }\r\n        \r\n            let newAllPost ={\r\n                id: 5,\r\n                username: \"Username\",\r\n                title: this._state.profilePage.newPostTitle,\r\n                text: this._state.profilePage.newPostText,\r\n                likes: 0,\r\n                dislikes: 0,\r\n                saved: false\r\n            }\r\n        \r\n            this._state.profilePage.myPostsData.push(newPost);\r\n            this._state.allPostsPage.allPostsData.push(newAllPost);\r\n        \r\n            this._state.profilePage.newPostTitle = \"\";\r\n            this._state.profilePage.newPostText = \"\";\r\n        \r\n            this._callSubscriber(this._state);\r\n        } else if(action.type == 'CHANGE-NEW-POST'){\r\n            this._state.profilePage.newPostTitle = action.newTitle;\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._callSubscriber(this._state);\r\n        }else if(action.type == 'SEND-MESSAGE'){\r\n            let newMessage = {\r\n                id: 5,\r\n                message: this._state.dialogsPage.newMessageText,\r\n            }\r\n        \r\n            this._state.dialogsPage.messagesData.push(newMessage);\r\n            this._state.dialogsPage.newMessageText = \"\";\r\n        \r\n            this._callSubscriber(this._state);\r\n        }else if(action.type == 'CHANGE-NEW-MESSAGE') {\r\n            this._state.dialogsPage.newMessageText = action.newMessage;\r\n            this._callSubscriber(this._state);\r\n        }\r\n    },\r\n}\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}