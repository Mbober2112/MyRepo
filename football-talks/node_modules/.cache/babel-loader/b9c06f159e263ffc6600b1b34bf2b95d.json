{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nlet initialState = {\n  allUsers: [{\n    id: 1,\n    name: \"Pavel\",\n    followed: true,\n    club: 'Спартак Москва',\n    postsCounter: 0,\n    raiting: 0\n  }, {\n    id: 2,\n    name: \"Petr\",\n    followed: false,\n    club: 'ЦСКА Москва',\n    postsCounter: 0,\n    raiting: 0\n  }, {\n    id: 3,\n    name: \"Dima\",\n    followed: true,\n    club: 'Локомотив Москва',\n    postsCounter: 0,\n    raiting: 0\n  }, {\n    id: 4,\n    name: \"Anton\",\n    followed: false,\n    club: 'Динамо Москва',\n    postsCounter: 0,\n    raiting: 0\n  }]\n};\n\nconst UsersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        allUsers: state.allUsers.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        allUsers: state.allUsers.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = UsersReducer;\nexport const followAC = id => ({\n  type: FOLLOW,\n  userId: id\n});\nexport const unfollowAC = id => ({\n  type: UNFOLLOW,\n  userId: id\n});\nexport default UsersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersReducer\");","map":{"version":3,"sources":["C:/Programming/MyRepo/src/redux/usersReducer.js"],"names":["FOLLOW","UNFOLLOW","initialState","allUsers","id","name","followed","club","postsCounter","raiting","UsersReducer","state","action","type","map","u","userId","followAC","unfollowAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CACN;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE,IAAlC;AAAwCC,IAAAA,IAAI,EAAE,gBAA9C;AAAgEC,IAAAA,YAAY,EAAE,CAA9E;AAAiFC,IAAAA,OAAO,EAAE;AAA1F,GADM,EAEN;AAAEL,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,MAAf;AAAuBC,IAAAA,QAAQ,EAAE,KAAjC;AAAwCC,IAAAA,IAAI,EAAE,aAA9C;AAA6DC,IAAAA,YAAY,EAAE,CAA3E;AAA8EC,IAAAA,OAAO,EAAE;AAAvF,GAFM,EAGN;AAAEL,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,MAAf;AAAuBC,IAAAA,QAAQ,EAAE,IAAjC;AAAuCC,IAAAA,IAAI,EAAE,kBAA7C;AAAiEC,IAAAA,YAAY,EAAE,CAA/E;AAAkFC,IAAAA,OAAO,EAAE;AAA3F,GAHM,EAIN;AAAEL,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE,KAAlC;AAAyCC,IAAAA,IAAI,EAAE,eAA/C;AAAgEC,IAAAA,YAAY,EAAE,CAA9E;AAAiFC,IAAAA,OAAO,EAAE;AAA1F,GAJM;AADK,CAAnB;;AASA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,MAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHR,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAAN,CAAeW,GAAf,CAAmBC,CAAC,IAAG;AAC7B,cAAGA,CAAC,CAACX,EAAF,KAASQ,MAAM,CAACI,MAAnB,EAA2B;AACvB,mBAAO,EAAC,GAAGD,CAAJ;AAAOT,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOS,CAAP;AACH,SALS;AAFP,OAAP;;AAUJ,SAAKd,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHR,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAAN,CAAeW,GAAf,CAAmBC,CAAC,IAAG;AAC7B,cAAGA,CAAC,CAACX,EAAF,KAASQ,MAAM,CAACI,MAAnB,EAA2B;AACvB,mBAAO,EAAC,GAAGD,CAAJ;AAAOT,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOS,CAAP;AACH,SALS;AAFP,OAAP;;AAUJ;AACI,aAAOJ,KAAP;AAxBR;AA0BH,CA3BD;;KAAMD,Y;AA6BN,OAAO,MAAMO,QAAQ,GAAIb,EAAD,KAAS;AAAES,EAAAA,IAAI,EAAEb,MAAR;AAAgBgB,EAAAA,MAAM,EAAEZ;AAAxB,CAAT,CAAjB;AACP,OAAO,MAAMc,UAAU,GAAId,EAAD,KAAS;AAAES,EAAAA,IAAI,EAAEZ,QAAR;AAAkBe,EAAAA,MAAM,EAAEZ;AAA1B,CAAT,CAAnB;AAEP,eAAeM,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\n\r\nlet initialState = {\r\n    allUsers: [\r\n        { id: 1, name: \"Pavel\", followed: true, club: 'Спартак Москва', postsCounter: 0, raiting: 0, },\r\n        { id: 2, name: \"Petr\", followed: false, club: 'ЦСКА Москва', postsCounter: 0, raiting: 0, },\r\n        { id: 3, name: \"Dima\", followed: true, club: 'Локомотив Москва', postsCounter: 0, raiting: 0, },\r\n        { id: 4, name: \"Anton\", followed: false, club: 'Динамо Москва', postsCounter: 0, raiting: 0, },\r\n    ],   \r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                allUsers: state.allUsers.map(u =>{\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        \r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                allUsers: state.allUsers.map(u =>{\r\n                    if(u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (id) => ({ type: FOLLOW, userId: id, });\r\nexport const unfollowAC = (id) => ({ type: UNFOLLOW, userId: id, });\r\n\r\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}